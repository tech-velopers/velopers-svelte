---
description: 
globs: Quiz.*
alwaysApply: false
---
# Quiz 페이지 사용 방법 및 구현 가이드

Quiz 페이지(`src/lib/pages/Quiz.svelte`)는 사용자가 퀴즈를 풀고, 관리(생성, 수정, 삭제)할 수 있는 페이지입니다.

## 주요 기능

- **퀴즈 진행**: 퀴즈 문제를 순차적으로 또는 랜덤으로 풀 수 있습니다.
- **카테고리 필터링**: 특정 카테고리의 퀴즈만 선택하여 볼 수 있습니다.
- **진행 상태 저장**: 로컬 스토리지를 통해 퀴즈 진행 상태가 자동 저장됩니다.
- **비밀번호 인증**: 퀴즈 페이지는 비밀번호를 통해 접근이 제한됩니다.
- **퀴즈 생성 및 수정**: 새 퀴즈를 추가하거나 기존 퀴즈를 수정할 수 있습니다.

## 구현 상세

### 데이터 구조

```typescript
interface Quiz {
  id: string;
  question: string;
  answer: string | null;
  category: string; // 쉼표로 구분된 여러 카테고리 포함 가능
  who: string | null;
}

interface SavedProgress {
  currentIndex: number;
  selectedCategories: string[];
  isRandomMode: boolean;
  isAuthenticated: boolean;
}
```

### 상태 관리

1. **퀴즈 데이터**: API에서 불러온 퀴즈 목록은 `quizzes` 배열에 저장됩니다.
2. **필터링**: `selectedCategories`에 선택된 카테고리들이 저장되고, 이를 기반으로 `filteredQuizzes`가 계산됩니다.
3. **현재 진행 상태**: `currentIndex`, `showAnswer`, `isRandomMode` 등이 현재 상태를 추적합니다.
4. **인증 상태**: `isAuthenticated`를 통해 사용자의 인증 여부를 추적합니다.

### 로컬 스토리지 활용

- **저장 키**: `velopersQuizProgress`
- **저장 내용**: 현재 인덱스, 선택된 카테고리, 랜덤 모드 여부, 인증 상태
- **트리거**: 주요 상태가 변경될 때마다 자동 저장
- **복원**: 페이지 로드 시 `onMount`에서 이전 상태 복원

### 카테고리 관리

- 카테고리는 쉼표(,)로 구분된 문자열로 저장됩니다.
- 퀴즈 생성/수정 시 여러 카테고리를 쉼표로 구분하여 입력할 수 있습니다.
- 카테고리 필터링은 사용자 UI에서 토글 형태로 제공됩니다.

### 비밀번호 인증

- 비밀번호는 상수 `correctPassword`에 하드코딩되어 있습니다.
- 로컬 스토리지에 인증 정보가 저장되어 있으면 다음 방문 시 비밀번호 입력 없이 바로 퀴즈에 접근할 수 있습니다.

## API 연동

- **퀴즈 목록 조회**: GET `/api/quiz`
- **퀴즈 생성**: POST `/api/quiz`
- **퀴즈 수정**: PUT `/api/quiz/:id`

## 사용자 인터페이스

- 모바일 최적화 UI: 터치 동작 최적화 및 반응형 디자인
- 어두운 테마 지원: `dark:` 클래스를 통한 다크 모드 스타일링
- 접근성: 질문과 답변 영역은 선택 가능하여 복사 기능 지원

## 유의사항

1. 새로운 퀴즈 생성 시 카테고리와 질문은 필수 입력 항목입니다.
2. 카테고리 필터링을 통해 선택된 카테고리의 퀴즈만 볼 수 있습니다.
3. 로컬 스토리지를 활용해 퀴즈 진행 상태를 저장하므로, 새로고침해도 진행 상태가 유지됩니다.
